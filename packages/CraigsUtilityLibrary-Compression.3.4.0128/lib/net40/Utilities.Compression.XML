<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Utilities.Compression</name>
  </assembly>
  <members>
    <member name="T:Utilities.Compression.ExtensionMethods.CompressionExtensions">
      <summary>
            Extension methods dealing with compression
            </summary>
    </member>
    <member name="M:Utilities.Compression.ExtensionMethods.CompressionExtensions.Compress(System.Byte[],Utilities.Compression.ExtensionMethods.Enums.CompressionType)">
      <summary>
            Compresses the data using the specified compression type
            </summary>
      <param name="Data">Data to compress</param>
      <param name="CompressionType">Compression type</param>
      <returns>The compressed data</returns>
      <requires description="Data" exception="T:System.ArgumentNullException" csharp="Data != null" vb="Data &lt;&gt; Nothing">Data != null</requires>
      <exception cref="T:System.ArgumentNullException">Data == null</exception>
    </member>
    <member name="M:Utilities.Compression.ExtensionMethods.CompressionExtensions.Compress(System.String,System.Text.Encoding,Utilities.Compression.ExtensionMethods.Enums.CompressionType)">
      <summary>
            Compresses a string of data
            </summary>
      <param name="Data">Data to Compress</param>
      <param name="EncodingUsing">Encoding that the data uses (defaults to UTF8)</param>
      <param name="CompressionType">The compression type used</param>
      <returns>The data Compressed</returns>
      <requires description="Data" exception="T:System.ArgumentNullException" csharp="!IsNullOrEmpty(Data)" vb="Not IsNullOrEmpty(Data)">!string.IsNullOrEmpty(Data)</requires>
      <exception cref="T:System.ArgumentNullException">string.IsNullOrEmpty(Data)</exception>
    </member>
    <member name="M:Utilities.Compression.ExtensionMethods.CompressionExtensions.Decompress(System.Byte[],Utilities.Compression.ExtensionMethods.Enums.CompressionType)">
      <summary>
            Decompresses the byte array that is sent in
            </summary>
      <param name="Data">Data to decompress</param>
      <param name="CompressionType">The compression type used</param>
      <returns>The data decompressed</returns>
      <requires description="Data" exception="T:System.ArgumentNullException" csharp="Data != null" vb="Data &lt;&gt; Nothing">Data != null</requires>
      <exception cref="T:System.ArgumentNullException">Data == null</exception>
    </member>
    <member name="M:Utilities.Compression.ExtensionMethods.CompressionExtensions.Decompress(System.String,System.Text.Encoding,Utilities.Compression.ExtensionMethods.Enums.CompressionType)">
      <summary>
            Decompresses a string of data
            </summary>
      <param name="Data">Data to decompress</param>
      <param name="EncodingUsing">Encoding that the result should use (defaults to UTF8)</param>
      <param name="CompressionType">The compression type used</param>
      <returns>The data decompressed</returns>
      <requires description="Data" exception="T:System.ArgumentNullException" csharp="!IsNullOrEmpty(Data)" vb="Not IsNullOrEmpty(Data)">!string.IsNullOrEmpty(Data)</requires>
      <exception cref="T:System.ArgumentNullException">string.IsNullOrEmpty(Data)</exception>
    </member>
    <member name="T:Utilities.Compression.ExtensionMethods.Enums.CompressionType">
      <summary>
            Defines the various compression types that are available
            </summary>
    </member>
    <member name="F:Utilities.Compression.ExtensionMethods.Enums.CompressionType.Deflate">
      <summary>
            Deflate
            </summary>
    </member>
    <member name="F:Utilities.Compression.ExtensionMethods.Enums.CompressionType.GZip">
      <summary>
            GZip
            </summary>
    </member>
  </members>
</doc>